// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: file_whisper.proto
// Protobuf C++ Version: 5.28.3

#include "file_whisper.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace whisper {

inline constexpr WhisperRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        passwords_{},
        root_id_{::int64_t{0}},
        data_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR WhisperRequest::WhisperRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WhisperRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhisperRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhisperRequestDefaultTypeInternal() {}
  union {
    WhisperRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhisperRequestDefaultTypeInternal _WhisperRequest_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Meta_MapStringEntry_DoNotUse::Meta_MapStringEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Meta_MapStringEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Meta_MapStringEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Meta_MapStringEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Meta_MapStringEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Meta_MapStringEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Meta_MapStringEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Meta_MapStringEntry_DoNotUseDefaultTypeInternal _Meta_MapStringEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Meta_MapNumberEntry_DoNotUse::Meta_MapNumberEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Meta_MapNumberEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Meta_MapNumberEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Meta_MapNumberEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Meta_MapNumberEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Meta_MapNumberEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Meta_MapNumberEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Meta_MapNumberEntry_DoNotUseDefaultTypeInternal _Meta_MapNumberEntry_DoNotUse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Meta_MapBoolEntry_DoNotUse::Meta_MapBoolEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Meta_MapBoolEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Meta_MapBoolEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Meta_MapBoolEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Meta_MapBoolEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Meta_MapBoolEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Meta_MapBoolEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Meta_MapBoolEntry_DoNotUseDefaultTypeInternal _Meta_MapBoolEntry_DoNotUse_default_instance_;

inline constexpr File::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mime_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extension_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        md5_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sha256_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR File::File(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FileDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FileDefaultTypeInternal() {}
  union {
    File _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FileDefaultTypeInternal _File_default_instance_;

inline constexpr Data::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Data::Data(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DataDefaultTypeInternal() {}
  union {
    Data _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DataDefaultTypeInternal _Data_default_instance_;

inline constexpr Meta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : map_string_{},
        map_number_{},
        map_bool_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Meta::Meta(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaDefaultTypeInternal() {}
  union {
    Meta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaDefaultTypeInternal _Meta_default_instance_;

inline constexpr Node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        children_{},
        _children_cached_byte_size_{0},
        meta_{nullptr},
        id_{::int64_t{0}},
        parent_id_{::int64_t{0}},
        content_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Node::Node(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefaultTypeInternal() {}
  union {
    Node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefaultTypeInternal _Node_default_instance_;

inline constexpr WhisperReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tree_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WhisperReply::WhisperReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WhisperReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhisperReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhisperReplyDefaultTypeInternal() {}
  union {
    WhisperReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhisperReplyDefaultTypeInternal _WhisperReply_default_instance_;
}  // namespace whisper
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_file_5fwhisper_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_file_5fwhisper_2eproto = nullptr;
const ::uint32_t
    TableStruct_file_5fwhisper_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _impl_.passwords_),
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _impl_.root_id_),
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _impl_.data_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::WhisperReply, _impl_.tree_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapStringEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapStringEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapStringEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapStringEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapNumberEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapNumberEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapNumberEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapNumberEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapBoolEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapBoolEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapBoolEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta_MapBoolEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::whisper::Meta, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::Meta, _impl_.map_string_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta, _impl_.map_number_),
        PROTOBUF_FIELD_OFFSET(::whisper::Meta, _impl_.map_bool_),
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_.parent_id_),
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_.children_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_.meta_),
        PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_.content_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.size_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.mime_type_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.extension_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.md5_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.sha256_),
        PROTOBUF_FIELD_OFFSET(::whisper::File, _impl_.content_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::whisper::Data, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::whisper::Data, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::whisper::Data, _impl_.content_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::whisper::WhisperRequest)},
        {17, -1, -1, sizeof(::whisper::WhisperReply)},
        {26, 36, -1, sizeof(::whisper::Meta_MapStringEntry_DoNotUse)},
        {38, 48, -1, sizeof(::whisper::Meta_MapNumberEntry_DoNotUse)},
        {50, 60, -1, sizeof(::whisper::Meta_MapBoolEntry_DoNotUse)},
        {62, -1, -1, sizeof(::whisper::Meta)},
        {73, 88, -1, sizeof(::whisper::Node)},
        {94, 110, -1, sizeof(::whisper::File)},
        {118, -1, -1, sizeof(::whisper::Data)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::whisper::_WhisperRequest_default_instance_._instance,
    &::whisper::_WhisperReply_default_instance_._instance,
    &::whisper::_Meta_MapStringEntry_DoNotUse_default_instance_._instance,
    &::whisper::_Meta_MapNumberEntry_DoNotUse_default_instance_._instance,
    &::whisper::_Meta_MapBoolEntry_DoNotUse_default_instance_._instance,
    &::whisper::_Meta_default_instance_._instance,
    &::whisper::_Node_default_instance_._instance,
    &::whisper::_File_default_instance_._instance,
    &::whisper::_Data_default_instance_._instance,
};
const char descriptor_table_protodef_file_5fwhisper_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022file_whisper.proto\022\007whisper\"z\n\016Whisper"
    "Request\022\023\n\tfile_path\030\001 \001(\tH\000\022\026\n\014file_con"
    "tent\030\002 \001(\014H\000\022\021\n\tpasswords\030\003 \003(\t\022\024\n\007root_"
    "id\030\004 \001(\003H\001\210\001\001B\006\n\004dataB\n\n\010_root_id\"+\n\014Whi"
    "sperReply\022\033\n\004tree\030\001 \003(\0132\r.whisper.Node\"\254"
    "\002\n\004Meta\0220\n\nmap_string\030\001 \003(\0132\034.whisper.Me"
    "ta.MapStringEntry\0220\n\nmap_number\030\002 \003(\0132\034."
    "whisper.Meta.MapNumberEntry\022,\n\010map_bool\030"
    "\003 \003(\0132\032.whisper.Meta.MapBoolEntry\0320\n\016Map"
    "StringEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:"
    "\0028\001\0320\n\016MapNumberEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\003:\0028\001\032.\n\014MapBoolEntry\022\013\n\003key\030\001 \001"
    "(\t\022\r\n\005value\030\002 \001(\010:\0028\001\"\235\001\n\004Node\022\n\n\002id\030\001 \001"
    "(\003\022\021\n\tparent_id\030\002 \001(\003\022\020\n\010children\030\003 \003(\003\022"
    "\035\n\004file\030\004 \001(\0132\r.whisper.FileH\000\022\035\n\004data\030\005"
    " \001(\0132\r.whisper.DataH\000\022\033\n\004meta\030\006 \001(\0132\r.wh"
    "isper.MetaB\t\n\007content\"\225\001\n\004File\022\014\n\004path\030\001"
    " \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004size\030\003 \001(\003\022\021\n\tmime"
    "_type\030\004 \001(\t\022\021\n\textension\030\005 \001(\t\022\013\n\003md5\030\006 "
    "\001(\t\022\016\n\006sha256\030\007 \001(\t\022\024\n\007content\030\010 \001(\014H\000\210\001"
    "\001B\n\n\010_content\"%\n\004Data\022\014\n\004type\030\001 \001(\t\022\017\n\007c"
    "ontent\030\002 \001(\0142I\n\007Whisper\022>\n\nWhispering\022\027."
    "whisper.WhisperRequest\032\025.whisper.Whisper"
    "Reply\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_file_5fwhisper_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_file_5fwhisper_2eproto = {
    false,
    false,
    935,
    descriptor_table_protodef_file_5fwhisper_2eproto,
    "file_whisper.proto",
    &descriptor_table_file_5fwhisper_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_file_5fwhisper_2eproto::offsets,
    file_level_enum_descriptors_file_5fwhisper_2eproto,
    file_level_service_descriptors_file_5fwhisper_2eproto,
};
namespace whisper {
// ===================================================================

class WhisperRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<WhisperRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::whisper::WhisperRequest, _impl_._oneof_case_);
};

WhisperRequest::WhisperRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:whisper.WhisperRequest)
}
inline PROTOBUF_NDEBUG_INLINE WhisperRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::whisper::WhisperRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        passwords_{visibility, arena, from.passwords_},
        data_{},
        _oneof_case_{from._oneof_case_[0]} {}

WhisperRequest::WhisperRequest(
    ::google::protobuf::Arena* arena,
    const WhisperRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WhisperRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.root_id_ = from._impl_.root_id_;
  switch (data_case()) {
    case DATA_NOT_SET:
      break;
      case kFilePath:
        new (&_impl_.data_.file_path_) decltype(_impl_.data_.file_path_){arena, from._impl_.data_.file_path_};
        break;
      case kFileContent:
        new (&_impl_.data_.file_content_) decltype(_impl_.data_.file_content_){arena, from._impl_.data_.file_content_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:whisper.WhisperRequest)
}
inline PROTOBUF_NDEBUG_INLINE WhisperRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        passwords_{visibility, arena},
        data_{},
        _oneof_case_{} {}

inline void WhisperRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.root_id_ = {};
}
WhisperRequest::~WhisperRequest() {
  // @@protoc_insertion_point(destructor:whisper.WhisperRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WhisperRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
  _impl_.~Impl_();
}

void WhisperRequest::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:whisper.WhisperRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (data_case()) {
    case kFilePath: {
      _impl_.data_.file_path_.Destroy();
      break;
    }
    case kFileContent: {
      _impl_.data_.file_content_.Destroy();
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WhisperRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WhisperRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WhisperRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WhisperRequest>(),
            ::google::protobuf::Message::GetNewImpl<WhisperRequest>(),
            ::google::protobuf::Message::GetClearImpl<WhisperRequest>(), &WhisperRequest::ByteSizeLong,
                &WhisperRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_._cached_size_),
            false,
        },
        &WhisperRequest::kDescriptorMethods,
        &descriptor_table_file_5fwhisper_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WhisperRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 0, 49, 2> WhisperRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::WhisperRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional int64 root_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WhisperRequest, _impl_.root_id_), 0>(),
     {32, 0, 0, PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_.root_id_)}},
    // repeated string passwords = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_.passwords_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string file_path = 1;
    {PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_.data_.file_path_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes file_content = 2;
    {PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_.data_.file_content_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string passwords = 3;
    {PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_.passwords_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // optional int64 root_id = 4;
    {PROTOBUF_FIELD_OFFSET(WhisperRequest, _impl_.root_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\26\11\0\11\0\0\0\0"
    "whisper.WhisperRequest"
    "file_path"
    "passwords"
  }},
};

PROTOBUF_NOINLINE void WhisperRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:whisper.WhisperRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.passwords_.Clear();
  _impl_.root_id_ = ::int64_t{0};
  clear_data();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WhisperRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WhisperRequest& this_ = static_cast<const WhisperRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WhisperRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WhisperRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:whisper.WhisperRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.data_case()) {
            case kFilePath: {
              const std::string& _s = this_._internal_file_path();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.WhisperRequest.file_path");
              target = stream->WriteStringMaybeAliased(1, _s, target);
              break;
            }
            case kFileContent: {
              const std::string& _s = this_._internal_file_content();
              target = stream->WriteBytesMaybeAliased(2, _s, target);
              break;
            }
            default:
              break;
          }
          // repeated string passwords = 3;
          for (int i = 0, n = this_._internal_passwords_size(); i < n; ++i) {
            const auto& s = this_._internal_passwords().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.WhisperRequest.passwords");
            target = stream->WriteString(3, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int64 root_id = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_root_id(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:whisper.WhisperRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WhisperRequest::ByteSizeLong(const MessageLite& base) {
          const WhisperRequest& this_ = static_cast<const WhisperRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WhisperRequest::ByteSizeLong() const {
          const WhisperRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:whisper.WhisperRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string passwords = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_passwords().size());
              for (int i = 0, n = this_._internal_passwords().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_passwords().Get(i));
              }
            }
          }
           {
            // optional int64 root_id = 4;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_root_id());
            }
          }
          switch (this_.data_case()) {
            // string file_path = 1;
            case kFilePath: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_path());
              break;
            }
            // bytes file_content = 2;
            case kFileContent: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_file_content());
              break;
            }
            case DATA_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WhisperRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WhisperRequest*>(&to_msg);
  auto& from = static_cast<const WhisperRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:whisper.WhisperRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_passwords()->MergeFrom(from._internal_passwords());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_impl_.root_id_ = from._impl_.root_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_data();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFilePath: {
        if (oneof_needs_init) {
          _this->_impl_.data_.file_path_.InitDefault();
        }
        _this->_impl_.data_.file_path_.Set(from._internal_file_path(), arena);
        break;
      }
      case kFileContent: {
        if (oneof_needs_init) {
          _this->_impl_.data_.file_content_.InitDefault();
        }
        _this->_impl_.data_.file_content_.Set(from._internal_file_content(), arena);
        break;
      }
      case DATA_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WhisperRequest::CopyFrom(const WhisperRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:whisper.WhisperRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WhisperRequest::InternalSwap(WhisperRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.passwords_.InternalSwap(&other->_impl_.passwords_);
        swap(_impl_.root_id_, other->_impl_.root_id_);
  swap(_impl_.data_, other->_impl_.data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata WhisperRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WhisperReply::_Internal {
 public:
};

WhisperReply::WhisperReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:whisper.WhisperReply)
}
inline PROTOBUF_NDEBUG_INLINE WhisperReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::whisper::WhisperReply& from_msg)
      : tree_{visibility, arena, from.tree_},
        _cached_size_{0} {}

WhisperReply::WhisperReply(
    ::google::protobuf::Arena* arena,
    const WhisperReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WhisperReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:whisper.WhisperReply)
}
inline PROTOBUF_NDEBUG_INLINE WhisperReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tree_{visibility, arena},
        _cached_size_{0} {}

inline void WhisperReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WhisperReply::~WhisperReply() {
  // @@protoc_insertion_point(destructor:whisper.WhisperReply)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WhisperReply::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WhisperReply::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WhisperReply_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WhisperReply::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WhisperReply>(),
            ::google::protobuf::Message::GetNewImpl<WhisperReply>(),
            ::google::protobuf::Message::GetClearImpl<WhisperReply>(), &WhisperReply::ByteSizeLong,
                &WhisperReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WhisperReply, _impl_._cached_size_),
            false,
        },
        &WhisperReply::kDescriptorMethods,
        &descriptor_table_file_5fwhisper_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WhisperReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WhisperReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::WhisperReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .whisper.Node tree = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WhisperReply, _impl_.tree_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .whisper.Node tree = 1;
    {PROTOBUF_FIELD_OFFSET(WhisperReply, _impl_.tree_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::whisper::Node>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WhisperReply::Clear() {
// @@protoc_insertion_point(message_clear_start:whisper.WhisperReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tree_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WhisperReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WhisperReply& this_ = static_cast<const WhisperReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WhisperReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WhisperReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:whisper.WhisperReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .whisper.Node tree = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tree_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tree().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:whisper.WhisperReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WhisperReply::ByteSizeLong(const MessageLite& base) {
          const WhisperReply& this_ = static_cast<const WhisperReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WhisperReply::ByteSizeLong() const {
          const WhisperReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:whisper.WhisperReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .whisper.Node tree = 1;
             {
              total_size += 1UL * this_._internal_tree_size();
              for (const auto& msg : this_._internal_tree()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WhisperReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WhisperReply*>(&to_msg);
  auto& from = static_cast<const WhisperReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:whisper.WhisperReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tree()->MergeFrom(
      from._internal_tree());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WhisperReply::CopyFrom(const WhisperReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:whisper.WhisperReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WhisperReply::InternalSwap(WhisperReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tree_.InternalSwap(&other->_impl_.tree_);
}

::google::protobuf::Metadata WhisperReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Meta_MapStringEntry_DoNotUse::Meta_MapStringEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Meta_MapStringEntry_DoNotUse::Meta_MapStringEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Meta_MapStringEntry_DoNotUse::Meta_MapStringEntry_DoNotUse() : SuperType() {}
              Meta_MapStringEntry_DoNotUse::Meta_MapStringEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::MessageLite::ClassDataFull
                  Meta_MapStringEntry_DoNotUse::_class_data_ = {
                      ::google::protobuf::Message::ClassData{
                          &_Meta_MapStringEntry_DoNotUse_default_instance_._instance,
                          &_table_.header,
                          nullptr,  // OnDemandRegisterArenaDtor
                          nullptr,  // IsInitialized
                          &Meta_MapStringEntry_DoNotUse::MergeImpl,
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                          ::google::protobuf::Message::GetDeleteImpl<Meta_MapStringEntry_DoNotUse>(),
                          ::google::protobuf::Message::GetNewImpl<Meta_MapStringEntry_DoNotUse>(),
                          ::google::protobuf::Message::ClearImpl, ::google::protobuf::Message::ByteSizeLongImpl,
                              ::google::protobuf::Message::_InternalSerializeImpl,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                          PROTOBUF_FIELD_OFFSET(Meta_MapStringEntry_DoNotUse, _impl_._cached_size_),
                          false,
                      },
                      &Meta_MapStringEntry_DoNotUse::kDescriptorMethods,
                      &descriptor_table_file_5fwhisper_2eproto,
                      nullptr,  // tracker
              };
              const ::google::protobuf::MessageLite::ClassData* Meta_MapStringEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 44, 2> Meta_MapStringEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Meta_MapStringEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::Meta_MapStringEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Meta_MapStringEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Meta_MapStringEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Meta_MapStringEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(Meta_MapStringEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\3\5\0\0\0\0\0"
    "whisper.Meta.MapStringEntry"
    "key"
    "value"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Meta_MapNumberEntry_DoNotUse::Meta_MapNumberEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Meta_MapNumberEntry_DoNotUse::Meta_MapNumberEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Meta_MapNumberEntry_DoNotUse::Meta_MapNumberEntry_DoNotUse() : SuperType() {}
              Meta_MapNumberEntry_DoNotUse::Meta_MapNumberEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::MessageLite::ClassDataFull
                  Meta_MapNumberEntry_DoNotUse::_class_data_ = {
                      ::google::protobuf::Message::ClassData{
                          &_Meta_MapNumberEntry_DoNotUse_default_instance_._instance,
                          &_table_.header,
                          nullptr,  // OnDemandRegisterArenaDtor
                          nullptr,  // IsInitialized
                          &Meta_MapNumberEntry_DoNotUse::MergeImpl,
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                          ::google::protobuf::Message::GetDeleteImpl<Meta_MapNumberEntry_DoNotUse>(),
                          ::google::protobuf::Message::GetNewImpl<Meta_MapNumberEntry_DoNotUse>(),
                          ::google::protobuf::Message::ClearImpl, ::google::protobuf::Message::ByteSizeLongImpl,
                              ::google::protobuf::Message::_InternalSerializeImpl,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                          PROTOBUF_FIELD_OFFSET(Meta_MapNumberEntry_DoNotUse, _impl_._cached_size_),
                          false,
                      },
                      &Meta_MapNumberEntry_DoNotUse::kDescriptorMethods,
                      &descriptor_table_file_5fwhisper_2eproto,
                      nullptr,  // tracker
              };
              const ::google::protobuf::MessageLite::ClassData* Meta_MapNumberEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> Meta_MapNumberEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Meta_MapNumberEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::Meta_MapNumberEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Meta_MapNumberEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Meta_MapNumberEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Meta_MapNumberEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Meta_MapNumberEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 value = 2;
    {PROTOBUF_FIELD_OFFSET(Meta_MapNumberEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\33\3\0\0\0\0\0\0"
    "whisper.Meta.MapNumberEntry"
    "key"
  }},
};

// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              Meta_MapBoolEntry_DoNotUse::Meta_MapBoolEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              Meta_MapBoolEntry_DoNotUse::Meta_MapBoolEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              Meta_MapBoolEntry_DoNotUse::Meta_MapBoolEntry_DoNotUse() : SuperType() {}
              Meta_MapBoolEntry_DoNotUse::Meta_MapBoolEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::MessageLite::ClassDataFull
                  Meta_MapBoolEntry_DoNotUse::_class_data_ = {
                      ::google::protobuf::Message::ClassData{
                          &_Meta_MapBoolEntry_DoNotUse_default_instance_._instance,
                          &_table_.header,
                          nullptr,  // OnDemandRegisterArenaDtor
                          nullptr,  // IsInitialized
                          &Meta_MapBoolEntry_DoNotUse::MergeImpl,
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                          ::google::protobuf::Message::GetDeleteImpl<Meta_MapBoolEntry_DoNotUse>(),
                          ::google::protobuf::Message::GetNewImpl<Meta_MapBoolEntry_DoNotUse>(),
                          ::google::protobuf::Message::ClearImpl, ::google::protobuf::Message::ByteSizeLongImpl,
                              ::google::protobuf::Message::_InternalSerializeImpl,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                          PROTOBUF_FIELD_OFFSET(Meta_MapBoolEntry_DoNotUse, _impl_._cached_size_),
                          false,
                      },
                      &Meta_MapBoolEntry_DoNotUse::kDescriptorMethods,
                      &descriptor_table_file_5fwhisper_2eproto,
                      nullptr,  // tracker
              };
              const ::google::protobuf::MessageLite::ClassData* Meta_MapBoolEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 37, 2> Meta_MapBoolEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Meta_MapBoolEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::Meta_MapBoolEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Meta_MapBoolEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Meta_MapBoolEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Meta_MapBoolEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(Meta_MapBoolEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool value = 2;
    {PROTOBUF_FIELD_OFFSET(Meta_MapBoolEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\31\3\0\0\0\0\0\0"
    "whisper.Meta.MapBoolEntry"
    "key"
  }},
};

// ===================================================================

class Meta::_Internal {
 public:
};

Meta::Meta(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:whisper.Meta)
}
inline PROTOBUF_NDEBUG_INLINE Meta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::whisper::Meta& from_msg)
      : map_string_{visibility, arena, from.map_string_},
        map_number_{visibility, arena, from.map_number_},
        map_bool_{visibility, arena, from.map_bool_},
        _cached_size_{0} {}

Meta::Meta(
    ::google::protobuf::Arena* arena,
    const Meta& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Meta* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:whisper.Meta)
}
inline PROTOBUF_NDEBUG_INLINE Meta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : map_string_{visibility, arena},
        map_number_{visibility, arena},
        map_bool_{visibility, arena},
        _cached_size_{0} {}

inline void Meta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Meta::~Meta() {
  // @@protoc_insertion_point(destructor:whisper.Meta)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Meta::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Meta::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Meta_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Meta::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Meta>(),
            ::google::protobuf::Message::GetNewImpl<Meta>(),
            ::google::protobuf::Message::GetClearImpl<Meta>(), &Meta::ByteSizeLong,
                &Meta::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Meta, _impl_._cached_size_),
            false,
        },
        &Meta::kDescriptorMethods,
        &descriptor_table_file_5fwhisper_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Meta::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 3, 49, 2> Meta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::Meta>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> map_string = 1;
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.map_string_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, int64> map_number = 2;
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.map_number_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // map<string, bool> map_bool = 3;
    {PROTOBUF_FIELD_OFFSET(Meta, _impl_.map_bool_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Meta()._impl_.map_string_)>(
        1, 0, 0, 9,
        9)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Meta()._impl_.map_number_)>(
        1, 0, 0, 9,
        3)},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(Meta()._impl_.map_bool_)>(
        1, 0, 0, 9,
        8)},
  }}, {{
    "\14\12\12\10\0\0\0\0"
    "whisper.Meta"
    "map_string"
    "map_number"
    "map_bool"
  }},
};

PROTOBUF_NOINLINE void Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:whisper.Meta)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.map_string_.Clear();
  _impl_.map_number_.Clear();
  _impl_.map_bool_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Meta::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Meta& this_ = static_cast<const Meta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Meta::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Meta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:whisper.Meta)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, string> map_string = 1;
          if (!this_._internal_map_string().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_map_string();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_string");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_string");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_string");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_string");
              }
            }
          }

          // map<string, int64> map_number = 2;
          if (!this_._internal_map_number().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::int64_t>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::int64_t,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_INT64>;
            const auto& field = this_._internal_map_number();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_number");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_number");
              }
            }
          }

          // map<string, bool> map_bool = 3;
          if (!this_._internal_map_bool().empty()) {
            using MapType = ::google::protobuf::Map<std::string, bool>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, bool,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_BOOL>;
            const auto& field = this_._internal_map_bool();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_bool");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Meta.map_bool");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:whisper.Meta)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Meta::ByteSizeLong(const MessageLite& base) {
          const Meta& this_ = static_cast<const Meta&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Meta::ByteSizeLong() const {
          const Meta& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:whisper.Meta)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> map_string = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_map_string_size());
              for (const auto& entry : this_._internal_map_string()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, int64> map_number = 2;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_map_number_size());
              for (const auto& entry : this_._internal_map_number()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::int64_t,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_INT64>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // map<string, bool> map_bool = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_map_bool_size());
              for (const auto& entry : this_._internal_map_bool()) {
                total_size += _pbi::MapEntryFuncs<std::string, bool,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_BOOL>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Meta::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Meta*>(&to_msg);
  auto& from = static_cast<const Meta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:whisper.Meta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.map_string_.MergeFrom(from._impl_.map_string_);
  _this->_impl_.map_number_.MergeFrom(from._impl_.map_number_);
  _this->_impl_.map_bool_.MergeFrom(from._impl_.map_bool_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Meta::CopyFrom(const Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:whisper.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Meta::InternalSwap(Meta* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.map_string_.InternalSwap(&other->_impl_.map_string_);
  _impl_.map_number_.InternalSwap(&other->_impl_.map_number_);
  _impl_.map_bool_.InternalSwap(&other->_impl_.map_bool_);
}

::google::protobuf::Metadata Meta::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Node::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Node>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Node, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::whisper::Node, _impl_._oneof_case_);
};

void Node::set_allocated_file(::whisper::File* file) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_content();
  if (file) {
    ::google::protobuf::Arena* submessage_arena = file->GetArena();
    if (message_arena != submessage_arena) {
      file = ::google::protobuf::internal::GetOwnedMessage(message_arena, file, submessage_arena);
    }
    set_has_file();
    _impl_.content_.file_ = file;
  }
  // @@protoc_insertion_point(field_set_allocated:whisper.Node.file)
}
void Node::set_allocated_data(::whisper::Data* data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_content();
  if (data) {
    ::google::protobuf::Arena* submessage_arena = data->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(message_arena, data, submessage_arena);
    }
    set_has_data();
    _impl_.content_.data_ = data;
  }
  // @@protoc_insertion_point(field_set_allocated:whisper.Node.data)
}
Node::Node(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:whisper.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::whisper::Node& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        children_{visibility, arena, from.children_},
        _children_cached_byte_size_{0},
        content_{},
        _oneof_case_{from._oneof_case_[0]} {}

Node::Node(
    ::google::protobuf::Arena* arena,
    const Node& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::whisper::Meta>(
                              arena, *from._impl_.meta_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, parent_id_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::parent_id_));
  switch (content_case()) {
    case CONTENT_NOT_SET:
      break;
      case kFile:
        _impl_.content_.file_ = ::google::protobuf::Message::CopyConstruct<::whisper::File>(arena, *from._impl_.content_.file_);
        break;
      case kData:
        _impl_.content_.data_ = ::google::protobuf::Message::CopyConstruct<::whisper::Data>(arena, *from._impl_.content_.data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:whisper.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        children_{visibility, arena},
        _children_cached_byte_size_{0},
        content_{},
        _oneof_case_{} {}

inline void Node::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, meta_),
           0,
           offsetof(Impl_, parent_id_) -
               offsetof(Impl_, meta_) +
               sizeof(Impl_::parent_id_));
}
Node::~Node() {
  // @@protoc_insertion_point(destructor:whisper.Node)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Node::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.meta_;
  if (has_content()) {
    clear_content();
  }
  _impl_.~Impl_();
}

void Node::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:whisper.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (content_case()) {
    case kFile: {
      if (GetArena() == nullptr) {
        delete _impl_.content_.file_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.content_.file_);
      }
      break;
    }
    case kData: {
      if (GetArena() == nullptr) {
        delete _impl_.content_.data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.content_.data_);
      }
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONTENT_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Node::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Node_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Node::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Node>(),
            ::google::protobuf::Message::GetNewImpl<Node>(),
            ::google::protobuf::Message::GetClearImpl<Node>(), &Node::ByteSizeLong,
                &Node::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Node, _impl_._cached_size_),
            false,
        },
        &Node::kDescriptorMethods,
        &descriptor_table_file_5fwhisper_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Node::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> Node::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Node, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::Node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Node, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.id_)}},
    // int64 parent_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Node, _impl_.parent_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.parent_id_)}},
    // repeated int64 children = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.children_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .whisper.Meta meta = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 2, PROTOBUF_FIELD_OFFSET(Node, _impl_.meta_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 parent_id = 2;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.parent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated int64 children = 3;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.children_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
    // .whisper.File file = 4;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.content_.file_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .whisper.Data data = 5;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.content_.data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .whisper.Meta meta = 6;
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.meta_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::whisper::File>()},
    {::_pbi::TcParser::GetTable<::whisper::Data>()},
    {::_pbi::TcParser::GetTable<::whisper::Meta>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:whisper.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.children_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.parent_id_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.parent_id_));
  clear_content();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Node::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Node::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:whisper.Node)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 id = 1;
          if (this_._internal_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_id(), target);
          }

          // int64 parent_id = 2;
          if (this_._internal_parent_id() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_parent_id(), target);
          }

          // repeated int64 children = 3;
          {
            int byte_size = this_._impl_._children_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteInt64Packed(
                  3, this_._internal_children(), byte_size, target);
            }
          }

          switch (this_.content_case()) {
            case kFile: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.content_.file_, this_._impl_.content_.file_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.content_.data_, this_._impl_.content_.data_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          // .whisper.Meta meta = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.meta_, this_._impl_.meta_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:whisper.Node)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Node::ByteSizeLong(const MessageLite& base) {
          const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Node::ByteSizeLong() const {
          const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:whisper.Node)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated int64 children = 3;
             {
              std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
                  this_._internal_children())
              ;
              this_._impl_._children_cached_byte_size_.Set(
                  ::_pbi::ToCachedSize(data_size));
              std::size_t tag_size = data_size == 0
                  ? 0
                  : 1 + ::_pbi::WireFormatLite::Int32Size(
                                      static_cast<int32_t>(data_size))
              ;
              total_size += tag_size + data_size;
            }
          }
           {
            // .whisper.Meta meta = 6;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.meta_);
            }
          }
           {
            // int64 id = 1;
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_id());
            }
            // int64 parent_id = 2;
            if (this_._internal_parent_id() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_parent_id());
            }
          }
          switch (this_.content_case()) {
            // .whisper.File file = 4;
            case kFile: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.content_.file_);
              break;
            }
            // .whisper.Data data = 5;
            case kData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.content_.data_);
              break;
            }
            case CONTENT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Node*>(&to_msg);
  auto& from = static_cast<const Node&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:whisper.Node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_children()->MergeFrom(from._internal_children());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.meta_ != nullptr);
    if (_this->_impl_.meta_ == nullptr) {
      _this->_impl_.meta_ =
          ::google::protobuf::Message::CopyConstruct<::whisper::Meta>(arena, *from._impl_.meta_);
    } else {
      _this->_impl_.meta_->MergeFrom(*from._impl_.meta_);
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_parent_id() != 0) {
    _this->_impl_.parent_id_ = from._impl_.parent_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_content();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kFile: {
        if (oneof_needs_init) {
          _this->_impl_.content_.file_ =
              ::google::protobuf::Message::CopyConstruct<::whisper::File>(arena, *from._impl_.content_.file_);
        } else {
          _this->_impl_.content_.file_->MergeFrom(from._internal_file());
        }
        break;
      }
      case kData: {
        if (oneof_needs_init) {
          _this->_impl_.content_.data_ =
              ::google::protobuf::Message::CopyConstruct<::whisper::Data>(arena, *from._impl_.content_.data_);
        } else {
          _this->_impl_.content_.data_->MergeFrom(from._internal_data());
        }
        break;
      }
      case CONTENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:whisper.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Node::InternalSwap(Node* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.children_.InternalSwap(&other->_impl_.children_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Node, _impl_.parent_id_)
      + sizeof(Node::_impl_.parent_id_)
      - PROTOBUF_FIELD_OFFSET(Node, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
  swap(_impl_.content_, other->_impl_.content_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class File::_Internal {
 public:
  using HasBits =
      decltype(std::declval<File>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(File, _impl_._has_bits_);
};

File::File(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:whisper.File)
}
inline PROTOBUF_NDEBUG_INLINE File::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::whisper::File& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_),
        name_(arena, from.name_),
        mime_type_(arena, from.mime_type_),
        extension_(arena, from.extension_),
        md5_(arena, from.md5_),
        sha256_(arena, from.sha256_),
        content_(arena, from.content_) {}

File::File(
    ::google::protobuf::Arena* arena,
    const File& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  File* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:whisper.File)
}
inline PROTOBUF_NDEBUG_INLINE File::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena),
        name_(arena),
        mime_type_(arena),
        extension_(arena),
        md5_(arena),
        sha256_(arena),
        content_(arena) {}

inline void File::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_ = {};
}
File::~File() {
  // @@protoc_insertion_point(destructor:whisper.File)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void File::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.path_.Destroy();
  _impl_.name_.Destroy();
  _impl_.mime_type_.Destroy();
  _impl_.extension_.Destroy();
  _impl_.md5_.Destroy();
  _impl_.sha256_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    File::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_File_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &File::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<File>(),
            ::google::protobuf::Message::GetNewImpl<File>(),
            ::google::protobuf::Message::GetClearImpl<File>(), &File::ByteSizeLong,
                &File::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(File, _impl_._cached_size_),
            false,
        },
        &File::kDescriptorMethods,
        &descriptor_table_file_5fwhisper_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* File::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 64, 2> File::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(File, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::File>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional bytes content = 8;
    {::_pbi::TcParser::FastBS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.content_)}},
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.path_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.name_)}},
    // int64 size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(File, _impl_.size_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.size_)}},
    // string mime_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.mime_type_)}},
    // string extension = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.extension_)}},
    // string md5 = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.md5_)}},
    // string sha256 = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(File, _impl_.sha256_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 size = 3;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.size_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string mime_type = 4;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.mime_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string extension = 5;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.extension_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string md5 = 6;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.md5_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sha256 = 7;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.sha256_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bytes content = 8;
    {PROTOBUF_FIELD_OFFSET(File, _impl_.content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\4\4\0\11\11\3\6\0\0\0\0\0\0\0\0"
    "whisper.File"
    "path"
    "name"
    "mime_type"
    "extension"
    "md5"
    "sha256"
  }},
};

PROTOBUF_NOINLINE void File::Clear() {
// @@protoc_insertion_point(message_clear_start:whisper.File)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.mime_type_.ClearToEmpty();
  _impl_.extension_.ClearToEmpty();
  _impl_.md5_.ClearToEmpty();
  _impl_.sha256_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.content_.ClearNonDefaultToEmpty();
  }
  _impl_.size_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* File::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const File& this_ = static_cast<const File&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* File::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const File& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:whisper.File)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string path = 1;
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.File.path");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.File.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 size = 3;
          if (this_._internal_size() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_size(), target);
          }

          // string mime_type = 4;
          if (!this_._internal_mime_type().empty()) {
            const std::string& _s = this_._internal_mime_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.File.mime_type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string extension = 5;
          if (!this_._internal_extension().empty()) {
            const std::string& _s = this_._internal_extension();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.File.extension");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string md5 = 6;
          if (!this_._internal_md5().empty()) {
            const std::string& _s = this_._internal_md5();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.File.md5");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string sha256 = 7;
          if (!this_._internal_sha256().empty()) {
            const std::string& _s = this_._internal_sha256();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.File.sha256");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional bytes content = 8;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_content();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:whisper.File)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t File::ByteSizeLong(const MessageLite& base) {
          const File& this_ = static_cast<const File&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t File::ByteSizeLong() const {
          const File& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:whisper.File)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string path = 1;
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string mime_type = 4;
            if (!this_._internal_mime_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mime_type());
            }
            // string extension = 5;
            if (!this_._internal_extension().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_extension());
            }
            // string md5 = 6;
            if (!this_._internal_md5().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_md5());
            }
            // string sha256 = 7;
            if (!this_._internal_sha256().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sha256());
            }
          }
           {
            // optional bytes content = 8;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_content());
            }
          }
           {
            // int64 size = 3;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void File::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<File*>(&to_msg);
  auto& from = static_cast<const File&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:whisper.File)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_mime_type().empty()) {
    _this->_internal_set_mime_type(from._internal_mime_type());
  }
  if (!from._internal_extension().empty()) {
    _this->_internal_set_extension(from._internal_extension());
  }
  if (!from._internal_md5().empty()) {
    _this->_internal_set_md5(from._internal_md5());
  }
  if (!from._internal_sha256().empty()) {
    _this->_internal_set_sha256(from._internal_sha256());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_content(from._internal_content());
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:whisper.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void File::InternalSwap(File* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mime_type_, &other->_impl_.mime_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extension_, &other->_impl_.extension_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.md5_, &other->_impl_.md5_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sha256_, &other->_impl_.sha256_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
        swap(_impl_.size_, other->_impl_.size_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Data::_Internal {
 public:
};

Data::Data(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:whisper.Data)
}
inline PROTOBUF_NDEBUG_INLINE Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::whisper::Data& from_msg)
      : type_(arena, from.type_),
        content_(arena, from.content_),
        _cached_size_{0} {}

Data::Data(
    ::google::protobuf::Arena* arena,
    const Data& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Data* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:whisper.Data)
}
inline PROTOBUF_NDEBUG_INLINE Data::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : type_(arena),
        content_(arena),
        _cached_size_{0} {}

inline void Data::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Data::~Data() {
  // @@protoc_insertion_point(destructor:whisper.Data)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Data::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Data::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Data_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Data::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Data>(),
            ::google::protobuf::Message::GetNewImpl<Data>(),
            ::google::protobuf::Message::GetClearImpl<Data>(), &Data::ByteSizeLong,
                &Data::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Data, _impl_._cached_size_),
            false,
        },
        &Data::kDescriptorMethods,
        &descriptor_table_file_5fwhisper_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Data::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 25, 2> Data::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::whisper::Data>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes content = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.content_)}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Data, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes content = 2;
    {PROTOBUF_FIELD_OFFSET(Data, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\4\0\0\0\0\0\0"
    "whisper.Data"
    "type"
  }},
};

PROTOBUF_NOINLINE void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:whisper.Data)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Data::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Data& this_ = static_cast<const Data&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Data::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Data& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:whisper.Data)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1;
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "whisper.Data.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes content = 2;
          if (!this_._internal_content().empty()) {
            const std::string& _s = this_._internal_content();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:whisper.Data)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Data::ByteSizeLong(const MessageLite& base) {
          const Data& this_ = static_cast<const Data&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Data::ByteSizeLong() const {
          const Data& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:whisper.Data)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string type = 1;
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
            // bytes content = 2;
            if (!this_._internal_content().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_content());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Data::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Data*>(&to_msg);
  auto& from = static_cast<const Data&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:whisper.Data)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:whisper.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Data::InternalSwap(Data* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace whisper
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_file_5fwhisper_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
